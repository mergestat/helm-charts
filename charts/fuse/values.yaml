replicaCount: 1

image:
  repository: mergestat/fuse
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  # tag: sha-bf949ea

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

fuse:
  # GITHUB_TOKEN env should be set
  # POSTGRES_CONNECTION may also be overridden
  env:
    - name: GITHUB_TOKEN
      valueFrom:
        secretKeyRef:
          name: fuse-secret
          key: GITHUB_TOKEN
    - name: POSTGRES_CONNECTION
      value: postgres://postgres:password@fuse-postgresql:5432/postgres?sslmode=disable

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# service:
#   type: ClusterIP
#   port: 80

# ingress:
#   enabled: false
#   className: ""
#   annotations: {}
#     # kubernetes.io/ingress.class: nginx
#     # kubernetes.io/tls-acme: "true"
#   hosts:
#     - host: chart-example.local
#       paths:
#         - path: /
#           pathType: ImplementationSpecific
#   tls: []
#   #  - secretName: chart-example-tls
#   #    hosts:
#   #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

postgresql:
# https://github.com/bitnami/charts/tree/master/bitnami/postgresql
  enabled: true
  auth:
    ## @param auth.postgresPassword Password for the "postgres" admin user. Ignored if `auth.existingSecret` with key `postgres-password` is provided
    postgresPassword: "password"
    ## @param auth.username Name for a custom user to create
    username: ""
    ## @param auth.password Password for the custom user to create. Ignored if `auth.existingSecret` with key `password` is provided
    password: ""
    ## @param auth.database Name for a custom database to create
    database: ""
    ## @param auth.replicationUsername Name of the replication user
    existingSecret: ""
    ## @param auth.existingSecret Name of existing secret to use for PostgreSQL credentials. The secret must contain the keys `postgres-password` (which is the password for "postgres" admin user), `password` (which is the password for the custom user to create when `auth.username` is set) and `replication-password` (which is the password for replication user). `auth.postgresPassword`, `auth.password`, and `auth.replicationPassword` will be ignored and picked up from this secret. The secret might also contains the key `ldap-password` if LDAP is enabled. `ldap.bind_password` will be ignored and picked from this secret in this case.
    ## The value is evaluated as a template.

persistence:
  enabled: false
  # storageCLass: "-"
  accessMode: ReadWriteOnce
  size: 20Gi
